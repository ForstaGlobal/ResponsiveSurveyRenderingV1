//TODO: V2 should get rid of background-position and paddings for more flexible rtl css styles

@mixin radio_bg($size, $selected: false) {
  @if ($selected) {
    background-image: svg-url('<svg width="32" height="32" xmlns="http://www.w3.org/2000/svg"><circle cx="16" cy="16" r="15" fill="#{$control-active-color}" /><circle cx="16" cy="16" r="5" fill="#{$question-bg-color}" /></svg>');
  } @else {
    background-image: svg-url('<svg width="32" height="32" xmlns="http://www.w3.org/2000/svg"><circle cx="16" cy="16" r="15" fill="#{$control-primary-color}"/></svg>');
    background-size: $size;
    background-repeat: no-repeat;
    background-position: left top;
  }
}

@mixin checkbox_bg($size, $selected: false) {
  @if ($selected) {
    background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" ><rect fill="#{$control-active-color}" height="30" width="30" y="1" x="1" /><path fill="#{$question-bg-color}" d="M 6.5,16.5 14.5,24.5 24.5,10 20,10 14,19 11.5,16.5 Z" /></svg>');
  } @else {
    background-image: svg-url('<svg width="32" height="32" xmlns="http://www.w3.org/2000/svg"><rect x="1" y="1" width="30" height="30" fill="#{$control-primary-color}" /></svg>');
    background-size: $size;
    background-repeat: no-repeat;
    background-position: left top;
  }
}

@mixin checkbox_radio_common($size: 1.4em, $rtl: false) {
  padding-left: $size + 0.8em;
  line-height: $size;
  min-height: $size;
  cursor: pointer;
  @if ($rtl) {
    padding-left: 0;
    padding-right: $size + 0.8em;
  }
}

@mixin radio($size, $selected: false, $rtl:false) {
  @include radio_bg($size, $selected);
  @if ($selected == false) {
    @include checkbox_radio_common($size, $rtl);
  }

  @if ($rtl) {
    background-position: right top;
  }
}

@mixin checkbox($size, $selected: false, $rtl: false) {
  @include checkbox_bg($size, $selected);
  @if ($selected == false) {
    @include checkbox_radio_common($size, $rtl);
  }

  @if ($rtl) {
    background-position: right top;
  }
}

@mixin radio_list($size: 1.4em, $rtl: false) {
  @include list;

  &-item {
    @include radio($size, false, $rtl);

    &--selected {
      @include radio($size, true, $rtl);
    }
  }
}

@mixin checkbox_list($size: 1.4em, $rtl:false) {
  @include list;

  &-item {
    @include checkbox($size, false, $rtl);

    &--selected {
      @include checkbox($size, true, $rtl);
    }
  }
}